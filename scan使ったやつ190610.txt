setwd("/Users/Yuki/Dropbox/SST/all")
dir = "/Users/Yuki/Dropbox/SST/all"
widths = rep(3, each = 1440)

readfiles = function(x){
  df = read.fwf(x,
                width = widths, #読み取る桁数の指定
                skip = 1)
}

fl = list.files(path = dir, full.names = T) #読み込むファイル名のリスト化
length(fl)
(2018-1982+1)*365 #length(fl)と等しい
fl[1]

#####データの緯度経度を指定する#####
#MGDSSTのlat
lat = data.frame(seq(89.875, -89.875, -0.25))
colnames(lat) = "lat"
lat$tag = rep(1:720)
#欲しい緯度範囲
lat2 = lat[lat$lat >= 24 & lat$lat <= 51, ]

#MGDSSTのlon
lon = data.frame(seq(359.875, 0, -0.25))
colnames(lon) = "lon"
lon$tag = rep(1:1440)
#欲しい経度範囲
lon2 = lon[lon$lon >= 122 & lon$lon <= 180, ]

#####データフレームの作成#####
require(stringr)
df_all = c()
for(i in 1:2){
  for(col in min(lat2$tag):max(lat2$tag)){
    for(row in min(lon2$tag)+1:max(lon2$tag)){
      df = scan(fl[i], what = character(), sep = "\n", blank.lines.skip = F)
      df2 = as.numeric(str_sub(df[row], col*3-2, col*3))/10
      #date = rep(df[1], )
      df_all = c(df_all, as.numeric(str_sub(df[row], col*3-2, col*3))/10)
    }
  }
}

df_all = c()
start = proc.time()
for(col in min(lat2$tag):max(lat2$tag)){
  for(row in min(lon2$tag)+1:max(lon2$tag)){
    df = scan(fl[1], what = character(), sep = "\n", blank.lines.skip = F)
    df2 = str_sub(df[row], col*3-2, col*3)
    #date = rep(df[1], )
    #df_all = c(df_all, df2, date)
  }
}
proc.time() - start

#####元のスクリプト#####
df_all = c()
start = proc.time()
  df = readfiles(fl[1])
  df2 = df[min(lat2$tag):max(lat2$tag), min(lon2$tag):max(lon2$tag)]
  colnames(df2) = lon2$lon
  df2$lat = rep(lat2$lat)
  df2$ymd = rep(str_sub(fl[i], (nchar(fl[i])-11), (nchar(fl[i])-4)), each = nrow(df2))
  
  df_all = rbind(df_all, df2)
proc.time() - start


#####元のスクリプト#####
df_all = c()
start = proc.time()
for(i in 1:4){
  df = readfiles(fl[i])
  df2 = df[min(lat2$tag):max(lat2$tag), min(lon2$tag):max(lon2$tag)]
  colnames(df2) = lon2$lon
  df2$lat = rep(lat2$lat)
  df2$ymd = rep(str_sub(fl[i], (nchar(fl[i])-11), (nchar(fl[i])-4)), each = nrow(df2))
  
  df_all = rbind(df_all, df2)
}
proc.time() - start



write.csv(df_all, "df_all.csv")

require(dplyr)
all = df_all %>% 